package controller

import (
	io "io"
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// MockCntrInterface is an autogenerated mock type for the MockCntrInterface type
type MockCntrInterface struct {
	mock.Mock
}

// GetFormattedTime provides a mock function with given fields:
func (_m *MockCntrInterface) GetFormattedTime() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetPage provides a mock function with given fields: url
func (_m *MockCntrInterface) GetPage(url string) io.ReadCloser {
	ret := _m.Called(url)

	var r0 io.ReadCloser
	if rf, ok := ret.Get(0).(func(string) io.ReadCloser); ok {
		r0 = rf(url)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.ReadCloser)
		}
	}

	return r0
}

// Sleep provides a mock function with given fields: duration
func (_m *MockCntrInterface) Sleep(duration time.Duration) {
	_m.Called(duration)
}

type mockConstructorTestingTNewMockCntrInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockCntrInterface creates a new instance of MockCntrInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockCntrInterface(t mockConstructorTestingTNewMockCntrInterface) *MockCntrInterface {
	mock := &MockCntrInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
